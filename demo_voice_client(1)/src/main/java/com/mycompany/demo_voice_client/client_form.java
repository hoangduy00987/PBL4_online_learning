/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.demo_voice_client;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.SourceDataLine;
import javax.sound.sampled.TargetDataLine;
/**
 *
 * @author ASUS-PRO
 */
public class client_form extends javax.swing.JFrame {

public int port_sv = 8888;
public String address_sv = "192.168.1.178";
TargetDataLine audio_in;
SourceDataLine audio_out;
public static AudioFormat getaudioFrmat(){
    float sampleRate =  8000.0F;// tan so lay mau am thanh
    int sampleSizeInbits = 16;//so bit cho moi mau
    int channel = 2;// Số kênh âm thanh (2 cho stereo)
    boolean signed = true;// Dấu (true cho âm thanh có dấu)
    boolean bigEdian = false;// Dữ liệu lưu trữ theo đúng thứ tự (false cho little-endian)

    return new AudioFormat(sampleRate, sampleSizeInbits, channel, signed, bigEdian);
    
    
}
   public void init_audio() {
    try {
        // Khởi tạo định dạng âm thanh
        AudioFormat format = getaudioFrmat();

        // Tạo thông tin cho dòng đầu vào âm thanh (TargetDataLine)
        DataLine.Info infor = new DataLine.Info(TargetDataLine.class, format);

        // Kiểm tra xem hệ thống có hỗ trợ định dạng âm thanh được chỉ định hay không
        if (!AudioSystem.isLineSupported(infor)) {
            System.out.println("Không hỗ trợ định dạng âm thanh này");
            return;
        }

        // Tạo và cấu hình dòng đầu vào âm thanh (TargetDataLine)
        audio_in = (TargetDataLine) AudioSystem.getLine(infor);
        audio_in.open(format);
        audio_in.start();

        // Tạo và cấu hình dòng đầu ra âm thanh (SourceDataLine)
        DataLine.Info outInfo = new DataLine.Info(SourceDataLine.class, format);
        if (!AudioSystem.isLineSupported(outInfo)) {
            System.out.println("Không hỗ trợ định dạng âm thanh đầu ra này");
            return;
        }
        audio_out = (SourceDataLine) AudioSystem.getLine(outInfo);
        audio_out.open(format);
        audio_out.start();

        // Cấu hình thông tin cho client_thread (Thread gửi/nhận dữ liệu âm thanh)
        client_thread thr = new client_thread();
        InetAddress ip = InetAddress.getByName(address_sv);
        thr.audio_in = audio_in;
        thr.audio_out = audio_out;
        thr.dout = new DatagramSocket();
        thr.server_ip = ip;
        thr.server_port = port_sv;
        Demo_voice_client.calling = true;
        thr.start();

        jButton1.setEnabled(false);
    } catch (LineUnavailableException | SocketException | UnknownHostException ex) {
        ex.printStackTrace();
    }
}
    public client_form() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("jLabel1");

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(198, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel1)
                .addGap(101, 101, 101)
                .addComponent(jButton1)
                .addContainerGap(109, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
init_audio();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(client_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(client_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(client_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(client_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new client_form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
